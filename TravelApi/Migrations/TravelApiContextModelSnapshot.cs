// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelApi.Models;

namespace TravelApi.Migrations
{
    [DbContext(typeof(TravelApiContext))]
    partial class TravelApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelApi.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CountryId = 1,
                            Name = "Vancouver"
                        },
                        new
                        {
                            CityId = 2,
                            CountryId = 5,
                            Name = "London"
                        },
                        new
                        {
                            CityId = 3,
                            CountryId = 2,
                            Name = "Tokyo"
                        },
                        new
                        {
                            CityId = 4,
                            CountryId = 4,
                            Name = "Sydney"
                        },
                        new
                        {
                            CityId = 5,
                            CountryId = 3,
                            Name = "Paris"
                        },
                        new
                        {
                            CityId = 6,
                            CountryId = 1,
                            Name = "Montreal"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "France"
                        },
                        new
                        {
                            CountryId = 4,
                            Name = "Australia"
                        },
                        new
                        {
                            CountryId = 5,
                            Name = "UK"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CityId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("ReviewScore");

                    b.Property<string>("ReviewText");

                    b.Property<string>("UserName");

                    b.HasKey("ReviewId");

                    b.HasIndex("CityId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("TravelApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravelApi.Models.City", b =>
                {
                    b.HasOne("TravelApi.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.HasOne("TravelApi.Models.City")
                        .WithMany("Reviews")
                        .HasForeignKey("CityId");
                });
#pragma warning restore 612, 618
        }
    }
}
